# This is a basic workflow to help you get started with Actions

name: Release

# Controls when the action will run. Triggers the workflow on push or pull request
# events but only for the master branch
on:
  push:
    branches: [ master ]

# A workflow run is made up of one or more jobs that can run sequentially or in parallel
jobs:
  # This workflow contains a single job called "build"
  build:
    # The type of runner that the job will run on
    runs-on: windows-latest

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2

    - name: Deploy to PSGallery
      env:
        PSGALLERY_TOKEN: ${{secrets.PSGALLERY_TOKEN}}
      run: |
        $ModuleName = 'Smtp4Dev4BcContainers'
        $ModulPath = Join-Path -Path (split-path $PSCommandPath) -ChildPath $ModuleName
        Import-Module $ModulPath -Force
        
        #Set Version
        $ManifestPath = (join-path $ModulPath -ChildPath "$ModuleName.psd1")
        $Manifest = Test-ModuleManifest -Path (join-path $ModulPath -ChildPath "$ModuleName.psd1")
        $newMajor = $Manifest.Version.Major
        $newMinor = $Manifest.Version.Minor
        $newBuild = get-date -Format "yyMMdd"
        $newRevision = get-date -Format "HHmmss"
        $NewVersion = New-Object System.Version -ArgumentList @($newMajor,$newMinor,$newBuild,$newRevision)
        Update-ModuleManifest -Path $ManifestPath -ModuleVersion $NewVersion #-Verbose

        #Publish to PSGallery
        Publish-Module -Path $ModulPath -NuGetApiKey $env:PSGALLERY_TOKEN -ErrorAction Stop -Force
      shell: pwsh
      
